apply plugin: 'java-library'
// Para agregar un comando que se llama aggregate, que es de Serenity y es para construir el reporte
apply plugin: 'net.serenity-bdd.aggregator'
//repositorio para el codigo fuente
repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
}
//repositorio y dependencias para configurar gradle
// Es para descargar las dependencias que configuraran a Gradle como tal, no hacen parte del codigo fuente.
buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
    }
    dependencies {
        // De aqui viene el plugin aggregator que esta en la linea 4
        classpath("net.serenity-bdd:serenity-gradle-plugin:2.0.80")
    }
}
//dependencias del codigo fuente
dependencies {
    // Dependencias para poder automatizar con Serenity
    implementation 'net.serenity-bdd:serenity-junit:2.0.80'
    implementation 'net.serenity-bdd:serenity-cucumber:1.9.45'
    implementation 'net.serenity-bdd:serenity-core:2.0.80'
    implementation 'org.slf4j:slf4j-simple:1.7.7'
    implementation 'com.google.guava:guava:23.0'
    implementation group: 'org.apache.poi', name: 'poi', version: '3.17'
    implementation group: 'org.apache.poi', name: 'poi-ooxml', version: '3.17'

    //Es para agregar jars de forma manual al proyecto
    implementation fileTree(dir: 'lib', include: '*.jar')
    // https://mvnrepository.com/artifact/io.github.bonigarcia/webdrivermanager
    implementation group: 'io.github.bonigarcia', name: 'webdrivermanager', version: '5.5.0'
//Libreria para Encriptacion
 implementation group: 'com.github.ulisesbocchio', name: 'jasypt-spring-boot-starter', version: '3.0.3'
    //lombok
    compileOnly 'org.projectlombok:lombok:1.18.20'
    annotationProcessor 'org.projectlombok:lombok:1.18.20'
    testCompileOnly 'org.projectlombok:lombok:1.18.20'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.24'

}
// Para configurar propiedades del comando de ejecucion de amazon con Gradle
test {
//Ignorar los fallos es ejecutar todas las amazon asi alguna falle
    ignoreFailures = true
}
// Configurar el encoding del proyecto
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}
// Continue asi falle alguna tarea de Gradle
gradle.startParameter.continueOnFailure = true